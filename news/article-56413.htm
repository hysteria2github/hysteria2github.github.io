<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteria2github.github.io/news/article-56413.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>vue3.0下如何使用mapState，mapGetters和mapActions</title>
        <meta name="description" content="vue3.0下如何使用mapState，mapGetters和mapActions      1、新建useMapper.js 2、新建useState.js 3、新建useGetters.js 4、" />
        <link rel="icon" href="/assets/website/img/hysteria2github/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Hysteria2 Github免费机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hysteria2github.github.io/news/article-56413.htm" />
    <meta property="og:site_name" content="Hysteria2 Github免费机场节点订阅官网" />
    <meta property="og:title" content="vue3.0下如何使用mapState，mapGetters和mapActions" />
    <meta property="og:image" content="https://hysteria2github.github.io/uploads/20240913/207a585ceb4765df9cd82ad8c243027b.webp" />
        <meta property="og:release_date" content="2025-02-14T10:02:16" />
    <meta property="og:updated_time" content="2025-02-14T10:02:16" />
        <meta property="og:description" content="vue3.0下如何使用mapState，mapGetters和mapActions      1、新建useMapper.js 2、新建useState.js 3、新建useGetters.js 4、" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vue3.0下如何使用mapState，mapGetters和mapActions">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Bootstrap core CSS -->
    <link href="/assets/website/css/hysteria2github/bootstrap.min.css" rel="stylesheet">
    <!-- tiny slider -->
    <link href="/assets/website/css/hysteria2github/tiny-slider.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/hysteria2github/swiper.min.css" type="text/css">
    <!-- Materialdesign icons css -->
    <link href="/assets/website/css/hysteria2github/materialdesignicons.min.css" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="/assets/website/css/hysteria2github/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-N5K97JTW4M"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-N5K97JTW4M');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--Navbar Start-->
    <nav class="navbar navbar-expand-lg fixed-top sticky" id="navbar">
        <div class="container-fluid custom-container">
            <a class="navbar-brand logo text-uppercase" href="/">
                        <span>Hysteria2 Github</span>
                        </a>
            <button class="navbar-toggler me-3 order-2 ms-4" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-controls="navbarCollapse" aria-label="Toggle navigation">
                <i class="mdi mdi-menu"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav mx-auto navbar-center">
                                        <li class="nav-item">
                        <a href="/" class="nav-link ">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/free-nodes/" class="nav-link ">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/paid-subscribe/" class="nav-link ">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/client.htm" class="nav-link ">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/news/" class="nav-link ">新闻资讯</a>
                    </li>
                                    </ul>
                <!--end navbar-nav-->
            </div>
        </div>
        <!--end container-->
    </nav>
    <!-- Navbar End -->

    <!-- start home section -->
    <section class="home category" id="home">
        <div class="container" id="ani-round">
            <div class="home-content">
                <div class="row align-items-center">
                    <div class="col-lg-6">
                        <h1 class="title mt-5 mt-lg-0">
                            vue3.0下如何使用mapState，mapGetters和mapActions                        </h1>
                        <p class="f-16 my-4 text-muted">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <div class="col-lg-6 mt-5">
                        <div class="animation-image" id="home-animation">
                            <div class="main-image mt-5 mt-lg-0 ms-lg-5 position-relative">
                                <img src="/assets/website/img/hysteria2github/home-bg.png" alt="" class="img-fluid">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- end section -->
    <!-- start features -->
    <section class="section " id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>vue3.0下如何使用mapState，mapGetters和mapActions</h3> <ul> <li> <ul> <li> <ul> <li><a href="#1useMapperjs_33" rel="nofollow">1、新建useMapper.js</a></li> <li><a href="#2useStatejs_70" rel="nofollow">2、新建useState.js</a></li> <li><a href="#3useGettersjs_94" rel="nofollow">3、新建useGetters.js</a></li> <li><a href="#4useActionsjs_118" rel="nofollow">4、新建useActions.js</a></li> <li><a href="#5_141" rel="nofollow">5、页面中使用</a></li> </ul> </li> </ul> </li> </ul> </div> <p> vue2.0中使用mapState及mapActions的方式</p> <pre><code class="prism language-javascript"><span class="token comment">// 使用mapState</span> computed<span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token comment">//...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>  methods<span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'fnA'</span><span class="token punctuation">,</span><span class="token string">'fnB'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <p>vue3.0中获取state和使用actions的方式</p> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>computed<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useStore<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> store<span class="token operator">=</span><span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> stateA<span class="token operator">=</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>stateA<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> stateB<span class="token operator">=</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>stateB<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> methodA<span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'methodA'</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span>name<span class="token operator">:</span><span class="token string">'张三'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>那如何才能在vue3下使用mapState这些api呢？</p> <p>答案是封装mapState，mapGetters，mapActions方法。</p> <h3><a id="1useMapperjs_33" rel="nofollow"></a>1、新建useMapper.js</h3> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> useStore<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> computed<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">export</span><span class="token keyword">function</span><span class="token function">useStateMapper</span><span class="token punctuation">(</span><span class="token parameter">mapper<span class="token punctuation">,</span> mapFn</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> store<span class="token operator">=</span><span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> storeStateFns<span class="token operator">=</span><span class="token function">mapFn</span><span class="token punctuation">(</span>mapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> storeState<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>storeStateFns<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fnKey</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span><span class="token comment">// vuex源码中mapState和mapGetters的方法中使用的是this.$store,所以更改this绑定</span><span class="token keyword">const</span> fn<span class="token operator">=</span> storeStateFns<span class="token punctuation">[</span>fnKey<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> $store<span class="token operator">:</span> store<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         storeState<span class="token punctuation">[</span>fnKey<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">computed</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">return</span> storeState<span class="token punctuation">}</span><span class="token keyword">export</span><span class="token keyword">function</span><span class="token function">useActionMapper</span><span class="token punctuation">(</span><span class="token parameter">mapper<span class="token punctuation">,</span> mapFn</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> store<span class="token operator">=</span><span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> storeActionsFns<span class="token operator">=</span><span class="token function">mapFn</span><span class="token punctuation">(</span>mapper<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> storeAction<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>storeActionsFns<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fnKey</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>         storeAction<span class="token punctuation">[</span>fnKey<span class="token punctuation">]</span><span class="token operator">=</span> storeActionsFns<span class="token punctuation">[</span>fnKey<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span> $store<span class="token operator">:</span> store<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">return</span> storeAction<span class="token punctuation">}</span></code></pre> <h3><a id="2useStatejs_70" rel="nofollow"></a>2、新建useState.js</h3> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> mapState<span class="token punctuation">,</span> createNamespacedHelpers<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> useStateMapper<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'./useMapper'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>checkType<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'./index'</span><span class="token comment">/**  *   * @param {*} moduleName 模块名称  * @param {*} mapper state属性集合 ['name', 'age']  * @returns   */</span><span class="token keyword">export</span><span class="token keyword">function</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">moduleName<span class="token punctuation">,</span> mapper</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> mapperFn<span class="token operator">=</span> mapState<span class="token punctuation">;</span><span class="token comment">// 如果使用模块化，则使用vuex提供的createNamespacedHelpers方法找到对应模块的mapState方法</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkType</span><span class="token punctuation">(</span>moduleName<span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">"[object String]"</span><span class="token operator">&amp;&amp;</span> moduleName<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         mapperFn<span class="token operator">=</span><span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span>moduleName<span class="token punctuation">)</span><span class="token punctuation">.</span>mapState<span class="token punctuation">}</span><span class="token keyword">return</span><span class="token function">useStateMapper</span><span class="token punctuation">(</span>mapper<span class="token punctuation">,</span> mapperFn<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <h3><a id="3useGettersjs_94" rel="nofollow"></a>3、新建useGetters.js</h3> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> mapGetters<span class="token punctuation">,</span> createNamespacedHelpers<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> useStateMapper<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'./useMapper'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>checkType<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'./index'</span><span class="token comment">/**  *   * @param {*} moduleName 模块名称  * @param {*} mapper getters属性集合 ['name', 'age']  * @returns   */</span><span class="token keyword">export</span><span class="token keyword">function</span><span class="token function">useGetters</span><span class="token punctuation">(</span><span class="token parameter">moduleName<span class="token punctuation">,</span> mapper</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> mapperFn<span class="token operator">=</span> mapGetters<span class="token punctuation">;</span><span class="token comment">// 如果使用模块化，则使用vuex提供的createNamespacedHelpers方法找到对应模块的mapGetters方法</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkType</span><span class="token punctuation">(</span>moduleName<span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">"[object String]"</span><span class="token operator">&amp;&amp;</span> moduleName<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         mapperFn<span class="token operator">=</span><span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span>moduleName<span class="token punctuation">)</span><span class="token punctuation">.</span>mapGetters<span class="token punctuation">}</span><span class="token keyword">return</span><span class="token function">useStateMapper</span><span class="token punctuation">(</span>mapper<span class="token punctuation">,</span> mapperFn<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <h3><a id="4useActionsjs_118" rel="nofollow"></a>4、新建useActions.js</h3> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span> mapActions<span class="token punctuation">,</span> createNamespacedHelpers<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useActionMapper<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'./useMapper'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>checkType<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'./index'</span><span class="token comment">/**  *   * @param {*} moduleName 模块名称  * @param {*} mapper 方法名集合 ['fn1', 'fn2']  * @returns   */</span><span class="token keyword">export</span><span class="token keyword">function</span><span class="token function">useActions</span><span class="token punctuation">(</span><span class="token parameter">moduleName<span class="token punctuation">,</span> mapper</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">let</span> mapperFn<span class="token operator">=</span> mapActions<span class="token punctuation">;</span><span class="token comment">// 如果使用模块化，则使用vuex提供的createNamespacedHelpers方法找到对应模块的mapActions方法</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkType</span><span class="token punctuation">(</span>moduleName<span class="token punctuation">)</span><span class="token operator">===</span><span class="token string">"[object String]"</span><span class="token operator">&amp;&amp;</span> moduleName<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         mapperFn<span class="token operator">=</span><span class="token function">createNamespacedHelpers</span><span class="token punctuation">(</span>moduleName<span class="token punctuation">)</span><span class="token punctuation">.</span>mapActions<span class="token punctuation">}</span><span class="token keyword">return</span><span class="token function">useActionMapper</span><span class="token punctuation">(</span>mapper<span class="token punctuation">,</span> mapperFn<span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre> <h3><a id="5_141" rel="nofollow"></a>5、页面中使用</h3> <pre><code class="prism language-javascript"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>div<span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"home"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>姓名：<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>name<span class="token punctuation">}</span><span class="token punctuation">}</span> 年龄：<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>age<span class="token punctuation">}</span><span class="token punctuation">}</span> 性别：<span class="token punctuation">{<!-- --></span><span class="token punctuation">{<!-- --></span>sex<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"changeName"</span><span class="token operator">&gt;</span>改名<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span><span class="token comment">// @ is an alias to /src</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useState<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'@/utils/useState'</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useActions<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'@/utils/useAction'</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span>     name<span class="token operator">:</span><span class="token string">"home"</span><span class="token punctuation">,</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> storeState<span class="token operator">=</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">,</span><span class="token string">'sex'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span> storeActions<span class="token operator">=</span><span class="token function">useActions</span><span class="token punctuation">(</span><span class="token string">'home'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'setName'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">const</span><span class="token function-variable function">changeName</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>             storeAction<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">'李四'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>             changeName<span class="token punctuation">,</span><span class="token operator">...</span>storeState<span class="token punctuation">,</span><span class="token operator">...</span>storeActions<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-55840.htm">猫咪3针疫苗一共多少元钱一针 猫咪3针疫苗一共多少元钱一针啊</a></p>
                                        <p>下一个：<a href="/news/article-56414.htm">动物疫苗的保管与使用方法视频（动物疫苗的保管与使用方法视频讲解）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-19-free-node-subscribe.htm" title="1月19日→23M/S|2025年最新免费节点Hysteria2 Github订阅链接地址">1月19日→23M/S|2025年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-18-node-share.htm" title="12月18日→19.4M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">12月18日→19.4M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-32275.htm" title="动物防疫站可以打狂犬疫苗吗要钱吗（动物防疫站可以打狂犬疫苗吗要钱吗现在）">动物防疫站可以打狂犬疫苗吗要钱吗（动物防疫站可以打狂犬疫苗吗要钱吗现在）</a></li>
                        <li class="py-2"><a href="/news/article-42002.htm" title="生物颗粒燃烧炉到底咋样（生物颗粒燃烧机怎么样）">生物颗粒燃烧炉到底咋样（生物颗粒燃烧机怎么样）</a></li>
                        <li class="py-2"><a href="/news/article-49443.htm" title="符合动物医院法定条件是什么意思呀英语（动物医院诊疗许可证需要提供什么）">符合动物医院法定条件是什么意思呀英语（动物医院诊疗许可证需要提供什么）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-4-free-node-subscribe-links.htm" title="2月4日→22.2M/S|2025年最新免费节点Hysteria2 Github订阅链接地址">2月4日→22.2M/S|2025年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-9-latest-hysteria-node.htm" title="12月9日→19.3M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">12月9日→19.3M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-hysteria-github.htm" title="11月21日→21.8M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">11月21日→21.8M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-26180.htm" title="我想卖狗在哪里卖（卖狗的联系电话）">我想卖狗在哪里卖（卖狗的联系电话）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-1-node-share-links.htm" title="2月1日→19.5M/S|2025年最新免费节点Hysteria2 Github订阅链接地址">2月1日→19.5M/S|2025年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">48</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- end features -->
        <div class="bg-light">
        <div class="container">
            <div class="row justify-content-center pt-5">
                <div class="col-lg-12">
                    <div class="copy-right mb-5 text-center text-muted">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <a href="/">Hysteria2 Github免费机场节点订阅官网</a> 版权所有 Powered by WordPress
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- bootstrap -->
    <script src="/assets/website/js/frontend/hysteria2github/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/swiper.min.js"></script>
    <!-- counter -->
    <script src="/assets/website/js/frontend/hysteria2github/counter.init.js"></script>
    <!-- Custom -->
    <script src="/assets/website/js/frontend/hysteria2github/app.js"></script>
    <script>
    (function() {
        // Add event listener
        document.addEventListener("mousemove", parallax);
        const elem = document.querySelector("#home-animation");
        // Magic happens here
        function parallax(e) {
            let _w = window.innerWidth / 2;
            let _h = window.innerHeight / 2;
            let _mouseX = e.clientX;
            let _mouseY = e.clientY;
            let _depth1 = `${50 - (_mouseX - _w) * 0.01}% ${50 - (_mouseY - _h) * 0.01}%`;
            let _depth2 = `${50 - (_mouseX - _w) * 0.02}% ${50 - (_mouseY - _h) * 0.02}%`;
            let _depth3 = `${50 - (_mouseX - _w) * 0.06}% ${50 - (_mouseY - _h) * 0.06}%`;
            let x = `${_depth3}, ${_depth2}, ${_depth1}`;
            elem.style.backgroundPosition = x;
        }

    })();
    </script>
    <script>
    (function() {
        // Add event listener
        document.addEventListener("mousemove", parallax);
        const elem = document.querySelector("#ani-round");
        // Magic happens here
        function parallax(e) {
            let _w = window.innerWidth / 2;
            let _h = window.innerHeight / 2;
            let _mouseX = e.clientX;
            let _mouseY = e.clientY;
            let _depth1 = `${50 - (_mouseX - _w) * 0.01}% ${50 - (_mouseY - _h) * 0.01}%`;
            let _depth2 = `${50 - (_mouseX - _w) * 0.02}% ${50 - (_mouseY - _h) * 0.02}%`;
            let _depth3 = `${50 - (_mouseX - _w) * 0.06}% ${50 - (_mouseY - _h) * 0.06}%`;
            let x = `${_depth3}, ${_depth2}, ${_depth1}`;
            elem.style.backgroundPosition = x;
        }

    })();
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>