<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteria2github.github.io/news/article-30379.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SpringBoot和Mybatis配置多数据源连接多个数据库</title>
        <meta name="description" content="目前业界操作数据库的框架一般是Mybatis，但在很多业务场景下，我们需要在一个工程里配置多个数据源来实现业务逻辑。在SpringBoot中也可以实现多数据源并配合Mybatis框架编写xml文件来执" />
        <link rel="icon" href="/assets/website/img/hysteria2github/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Hysteria2 Github免费机场节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://hysteria2github.github.io/news/article-30379.htm" />
    <meta property="og:site_name" content="Hysteria2 Github免费机场节点订阅官网" />
    <meta property="og:title" content="SpringBoot和Mybatis配置多数据源连接多个数据库" />
    <meta property="og:image" content="https://hysteria2github.github.io/uploads/20240913/a2f71a46527dc2315997af2cdfd5e976.webp" />
        <meta property="og:release_date" content="2024-12-24T09:41:55" />
    <meta property="og:updated_time" content="2024-12-24T09:41:55" />
        <meta property="og:description" content="目前业界操作数据库的框架一般是Mybatis，但在很多业务场景下，我们需要在一个工程里配置多个数据源来实现业务逻辑。在SpringBoot中也可以实现多数据源并配合Mybatis框架编写xml文件来执" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="SpringBoot和Mybatis配置多数据源连接多个数据库">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Bootstrap core CSS -->
    <link href="/assets/website/css/hysteria2github/bootstrap.min.css" rel="stylesheet">
    <!-- tiny slider -->
    <link href="/assets/website/css/hysteria2github/tiny-slider.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/hysteria2github/swiper.min.css" type="text/css">
    <!-- Materialdesign icons css -->
    <link href="/assets/website/css/hysteria2github/materialdesignicons.min.css" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="/assets/website/css/hysteria2github/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-N5K97JTW4M"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-N5K97JTW4M');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--Navbar Start-->
    <nav class="navbar navbar-expand-lg fixed-top sticky" id="navbar">
        <div class="container-fluid custom-container">
                        <a class="navbar-brand logo text-uppercase" href="/">
                <span>Hysteria2 Github</span>
            </a>
                        <button class="navbar-toggler me-3 order-2 ms-4" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-controls="navbarCollapse" aria-label="Toggle navigation">
                <i class="mdi mdi-menu"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav mx-auto navbar-center">
                                        <li class="nav-item">
                        <a href="/" class="nav-link ">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/free-nodes/" class="nav-link ">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/paid-subscribe/" class="nav-link ">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/news/" class="nav-link ">新闻资讯</a>
                    </li>
                                        <li class="nav-item dropdown dropdown-hover">
                        <a href="#" class="nav-link ">关于</a>
                    </li>
                    <li class="nav-item dropdown dropdown-hover">
                        <a href="#" class="nav-link ">联系</a>
                    </li>
                </ul>
                <!--end navbar-nav-->
            </div>
        </div>
        <!--end container-->
    </nav>
    <!-- Navbar End -->

    <!-- start home section -->
    <section class="home category" id="home">
        <div class="container" id="ani-round">
            <div class="home-content">
                <div class="row align-items-center">
                    <div class="col-lg-6">
                        <h1 class="title mt-5 mt-lg-0">
                            SpringBoot和Mybatis配置多数据源连接多个数据库                        </h1>
                        <p class="f-16 my-4 text-muted">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <div class="col-lg-6 mt-5">
                        <div class="animation-image" id="home-animation">
                            <div class="main-image mt-5 mt-lg-0 ms-lg-5 position-relative">
                                <img src="/assets/website/img/hysteria2github/home-bg.png" alt="" class="img-fluid">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- end section -->
    <!-- start features -->
    <section class="section " id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>目前业界操作数据库的框架一般是<code>Mybatis</code>，但在很多业务场景下，我们需要在一个工程里配置多个数据源来实现业务逻辑。在<code>SpringBoot</code>中也可以实现多数据源并配合<code>Mybatis</code>框架编写xml文件来执行SQL。在<code>SpringBoot</code>中，配置多数据源的方式十分便捷，</p> <p>下面开始上代码：</p> <ul> <li><strong>在<code>pom.xml</code>文件中需要添加一些依赖</strong></li> <li> <pre class="has"><code>&lt;!-- Spring Boot Mybatis 依赖 --&gt; &lt;dependency&gt;   &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;   &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;   &lt;version&gt;1.2.0&lt;/version&gt; &lt;/dependency&gt;  &lt;!-- MySQL 连接驱动依赖 --&gt; &lt;dependency&gt;   &lt;groupId&gt;mysql&lt;/groupId&gt;   &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;   &lt;version&gt;5.1.39&lt;/version&gt; &lt;/dependency&gt;  &lt;!-- Druid 数据连接池依赖 --&gt; &lt;dependency&gt;   &lt;groupId&gt;com.alibaba&lt;/groupId&gt;   &lt;artifactId&gt;druid&lt;/artifactId&gt;   &lt;version&gt;1.0.18&lt;/version&gt; &lt;/dependency&gt;</code></pre> </li> <li><strong>application.properties 配置两个数据源配置</strong></li> <li> <pre class="has"><code># master 数据源配置 master:   datasource:     url: jdbc:sqlserver://localhost:1433;DatabaseName=RYAccountsDB     driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver     username: sa     password: sa!@123     initial-size: 1     min-idle: 1     max-active: 20     test-on-borrow: true     max-wait: 60000     time-between-eviction-runs-millis: 60000     min-evictable-idle-time-millis: 300000     validation-query: SELECT 1 FROM DUAL     test-While-Idle: true     test-on-return: false     pool-prepared-statements: false     max-pool-prepared-statement-per-connection-size: 20     filters: stat,wall,log4j,config # second 数据源配置 second:   datasource:     url: jdbc:mysql://localhost:33306/game_score_log?serverTimezone=GMT&amp;useUnicode=true&amp;characterEncoding=utf8     username: root     password: 1q2w#E4r     driver-class-name: com.mysql.cj.jdbc.Driver     max-idle: 10     max-wait: 10000     min-idle: 5     initial-size: 5  #mybatis: #  type-aliases-package: com.cjrh.game_api.dao #  mapper-locations: classpath*:mapper/*.xml server:   port: 7000</code></pre> </li> <li><strong>数据源配置</strong></li> <li> <pre class="has"><code>多数据源配置的时候注意，必须要有一个主数据源，即 MasterDataSourceConfig 配置  @Primary 标志这个 Bean 如果在多个同类 Bean 候选时，该 Bean 优先被考虑。「多数据源配置的时候注意，必须要有一个主数据源，用 @Primary 标志该 Bean @MapperScan 扫描 Mapper 接口并容器管理，包路径精确到 master，为了和下面 cluster 数据源做到精确区分 @Value 获取全局配置文件 application.properties 的 kv 配置,并自动装配sqlSessionFactoryRef 表示定义了 key ，表示一个唯一 SqlSessionFactory 实例  作者：ChinaXieShuai 链接：https://www.jianshu.com/p/735852145580 来源：简书 简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。</code></pre> <p><code>MasterDataSourceConfig</code>的代码：</li> <li> <pre class="has"><code>package com.cjrh.game_api.jdbc;  import com.alibaba.druid.pool.DruidDataSource; import org.apache.ibatis.session.SqlSessionFactory; import org.mybatis.spring.SqlSessionFactoryBean; import org.mybatis.spring.annotation.MapperScan; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.Primary; import org.springframework.core.io.support.PathMatchingResourcePatternResolver; import org.springframework.jdbc.datasource.DataSourceTransactionManager;  import javax.sql.DataSource;   /**  * @program: game_api  * @description:  * @author: Dading  * @create: 2019-04-12 14:14  * @version: 1.0  **/ @Configuration // 扫描 Mapper 接口并容器管理 @MapperScan(basePackages = MasterDataSourceConfig.PACKAGE, sqlSessionFactoryRef = "masterSqlSessionFactory") public class MasterDataSourceConfig {       // 精确到 master 目录，以便跟其他数据源隔离     static final String PACKAGE = "com.cjrh.game_api.dao.master";     static final String MAPPER_LOCATION = "classpath:mapper/master/*.xml";      @Value("${master.datasource.url}")     private String url;      @Value("${master.datasource.username}")     private String user;      @Value("${master.datasource.password}")     private String password;      @Value("${master.datasource.driver-class-name}")     private String driverClass;      @Bean(name = "masterDataSource")     @Primary     public DataSource masterDataSource() {         DruidDataSource dataSource = new DruidDataSource();         dataSource.setDriverClassName(driverClass);         dataSource.setUrl(url);         dataSource.setUsername(user);         dataSource.setPassword(password);         return dataSource;     }      @Bean(name = "masterTransactionManager")     @Primary     public DataSourceTransactionManager masterTransactionManager() {         return new DataSourceTransactionManager(masterDataSource());     }      @Bean(name = "masterSqlSessionFactory")     @Primary     public SqlSessionFactory masterSqlSessionFactory(@Qualifier("masterDataSource") DataSource masterDataSource)             throws Exception {         final SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean();         sessionFactory.setDataSource(masterDataSource);         sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver()                 .getResources(MasterDataSourceConfig.MAPPER_LOCATION));         return sessionFactory.getObject();     }  }</code></pre> <p>第二个数据源<code>SecondDataSourceConfig</code>的配置如下:</p> </li> <li> <pre class="has"><code>package com.cjrh.game_api.jdbc;  import com.alibaba.druid.pool.DruidDataSource; import org.apache.ibatis.session.SqlSessionFactory; import org.mybatis.spring.SqlSessionFactoryBean; import org.mybatis.spring.annotation.MapperScan; import org.springframework.beans.factory.annotation.Qualifier; import org.springframework.beans.factory.annotation.Value; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.core.io.support.PathMatchingResourcePatternResolver; import org.springframework.jdbc.datasource.DataSourceTransactionManager;  import javax.sql.DataSource;  /**  * @program: game_api  * @description:  * @author: Dading  * @create: 2019-04-12 14:14  * @version: 1.0  **/ @Configuration // 扫描 Mapper 接口并容器管理 @MapperScan(basePackages = SecondDataSourceConfig.PACKAGE, sqlSessionFactoryRef = "secondSqlSessionFactory") public class SecondDataSourceConfig {      // 精确到 cluster 目录，以便跟其他数据源隔离     static final String PACKAGE = "com.cjrh.game_api.dao.second";     static final String MAPPER_LOCATION = "classpath:mapper/second/*.xml";      @Value("${second.datasource.url}")     private String url;      @Value("${second.datasource.username}")     private String user;      @Value("${second.datasource.password}")     private String password;      @Value("${second.datasource.driver-class-name}")     private String driverClass;      @Bean(name = "secondDataSource")     public DataSource clusterDataSource() {         DruidDataSource dataSource = new DruidDataSource();         dataSource.setDriverClassName(driverClass);         dataSource.setUrl(url);         dataSource.setUsername(user);         dataSource.setPassword(password);         return dataSource;     }      @Bean(name = "secondTransactionManager")     public DataSourceTransactionManager clusterTransactionManager() {         return new DataSourceTransactionManager(clusterDataSource());     }      @Bean(name = "secondSqlSessionFactory")     public SqlSessionFactory clusterSqlSessionFactory(@Qualifier("secondDataSource") DataSource clusterDataSource)             throws Exception {         final SqlSessionFactoryBean sessionFactory = new SqlSessionFactoryBean();         sessionFactory.setDataSource(clusterDataSource);         sessionFactory.setMapperLocations(new PathMatchingResourcePatternResolver()                 .getResources(SecondDataSourceConfig.MAPPER_LOCATION));         return sessionFactory.getObject();     } }</code></pre> <p>项目目录如下：</p> </li> <li> <p><img decoding="async" alt="" class="has" src="http://img.555519.xyz/uploads3/20220603/01085809717267c04e36f5b048f3845a.jpg"></p> </li> </ul> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-29902.htm">猫粮加工厂需要什么设备（猫粮加工厂要哪些手续）</a></p>
                                        <p>下一个：<a href="/news/article-30380.htm">携程开源分布式配置系统Apollo服务端是如何实时更新配置的</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-28486.htm" title="不能养什么狗狗（四种不能养的狗）">不能养什么狗狗（四种不能养的狗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-28-free-subscribe-node.htm" title="1月28日→20.7M/S|2025年最新免费节点Hysteria2 Github订阅链接地址">1月28日→20.7M/S|2025年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-20172.htm" title="狗粮加工机器设备（狗粮加工机器设备有哪些）">狗粮加工机器设备（狗粮加工机器设备有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-46945.htm" title="猫粮狗粮加工厂（猫粮狗粮加工设备）">猫粮狗粮加工厂（猫粮狗粮加工设备）</a></li>
                        <li class="py-2"><a href="/news/article-43002.htm" title="宠物用品货源代理平台（宠物用品拿货网站）">宠物用品货源代理平台（宠物用品拿货网站）</a></li>
                        <li class="py-2"><a href="/news/article-34657.htm" title="动物接种疫苗的好处和坏处 动物接种疫苗的好处和坏处有哪些">动物接种疫苗的好处和坏处 动物接种疫苗的好处和坏处有哪些</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-25-sing-hysteria-windows.htm" title="11月25日→22.9M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">11月25日→22.9M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-23-free-hysteria-node.htm" title="12月23日→21.2M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">12月23日→21.2M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-48928.htm" title="宠物批发商（宠物批发渠道）">宠物批发商（宠物批发渠道）</a></li>
                        <li class="py-2"><a href="/news/article-37067.htm" title="MySQL数据类型——时间/日期类型（DATE、TIME、DATETIME、TIMESTAMP、YEAR）">MySQL数据类型——时间/日期类型（DATE、TIME、DATETIME、TIMESTAMP、YEAR）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- end features -->
        <div class="bg-light">
        <div class="container">
            <div class="row justify-content-center pt-5">
                <div class="col-lg-12">
                    <div class="copy-right mb-5 text-center text-muted">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <a href="/">Hysteria2 Github免费机场节点订阅官网</a> 版权所有 Powered by WordPress
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- bootstrap -->
    <script src="/assets/website/js/frontend/hysteria2github/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/swiper.min.js"></script>
    <!-- counter -->
    <script src="/assets/website/js/frontend/hysteria2github/counter.init.js"></script>
    <!-- Custom -->
    <script src="/assets/website/js/frontend/hysteria2github/app.js"></script>
    <script>
    (function() {
        // Add event listener
        document.addEventListener("mousemove", parallax);
        const elem = document.querySelector("#home-animation");
        // Magic happens here
        function parallax(e) {
            let _w = window.innerWidth / 2;
            let _h = window.innerHeight / 2;
            let _mouseX = e.clientX;
            let _mouseY = e.clientY;
            let _depth1 = `${50 - (_mouseX - _w) * 0.01}% ${50 - (_mouseY - _h) * 0.01}%`;
            let _depth2 = `${50 - (_mouseX - _w) * 0.02}% ${50 - (_mouseY - _h) * 0.02}%`;
            let _depth3 = `${50 - (_mouseX - _w) * 0.06}% ${50 - (_mouseY - _h) * 0.06}%`;
            let x = `${_depth3}, ${_depth2}, ${_depth1}`;
            elem.style.backgroundPosition = x;
        }

    })();
    </script>
    <script>
    (function() {
        // Add event listener
        document.addEventListener("mousemove", parallax);
        const elem = document.querySelector("#ani-round");
        // Magic happens here
        function parallax(e) {
            let _w = window.innerWidth / 2;
            let _h = window.innerHeight / 2;
            let _mouseX = e.clientX;
            let _mouseY = e.clientY;
            let _depth1 = `${50 - (_mouseX - _w) * 0.01}% ${50 - (_mouseY - _h) * 0.01}%`;
            let _depth2 = `${50 - (_mouseX - _w) * 0.02}% ${50 - (_mouseY - _h) * 0.02}%`;
            let _depth3 = `${50 - (_mouseX - _w) * 0.06}% ${50 - (_mouseY - _h) * 0.06}%`;
            let x = `${_depth3}, ${_depth2}, ${_depth1}`;
            elem.style.backgroundPosition = x;
        }

    })();
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>