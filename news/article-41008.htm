<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://hysteria2github.github.io/news/article-41008.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>vuex配置项、多组件数据共享案例详解</title>
        <meta name="description" content="文章目录  getters 配置项 mapState、mapGetters mapActions、mapMutations 多组件共享数据    没有看过上一篇的同学可以查看：Vue Vuex学习(搭" />
        <link rel="icon" href="/assets/website/img/hysteria2github/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap core CSS -->
    <link href="/assets/website/css/hysteria2github/bootstrap.min.css" rel="stylesheet">
    <!-- tiny slider -->
    <link href="/assets/website/css/hysteria2github/tiny-slider.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/hysteria2github/swiper.min.css" type="text/css">
    <!-- Materialdesign icons css -->
    <link href="/assets/website/css/hysteria2github/materialdesignicons.min.css" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="/assets/website/css/hysteria2github/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-N5K97JTW4M"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-N5K97JTW4M');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--Navbar Start-->
    <nav class="navbar navbar-expand-lg fixed-top sticky" id="navbar">
        <div class="container-fluid custom-container">
                        <a class="navbar-brand logo text-uppercase" href="/">
                <span>Hysteria2 Github</span>
            </a>
                        <button class="navbar-toggler me-3 order-2 ms-4" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse" aria-controls="navbarCollapse" aria-label="Toggle navigation">
                <i class="mdi mdi-menu"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav mx-auto navbar-center">
                                        <li class="nav-item">
                        <a href="/" class="nav-link ">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/free-nodes/" class="nav-link ">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/paid-subscribe/" class="nav-link ">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a href="/news/" class="nav-link ">新闻资讯</a>
                    </li>
                                        <li class="nav-item dropdown dropdown-hover">
                        <a href="#" class="nav-link ">关于</a>
                    </li>
                    <li class="nav-item dropdown dropdown-hover">
                        <a href="#" class="nav-link ">联系</a>
                    </li>
                </ul>
                <!--end navbar-nav-->
            </div>
        </div>
        <!--end container-->
    </nav>
    <!-- Navbar End -->

    <!-- start home section -->
    <section class="home category" id="home">
        <div class="container" id="ani-round">
            <div class="home-content">
                <div class="row align-items-center">
                    <div class="col-lg-6">
                        <h1 class="title mt-5 mt-lg-0">
                            vuex配置项、多组件数据共享案例详解                        </h1>
                        <p class="f-16 my-4 text-muted">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                    <div class="col-lg-6 mt-5">
                        <div class="animation-image" id="home-animation">
                            <div class="main-image mt-5 mt-lg-0 ms-lg-5 position-relative">
                                <img src="/assets/website/img/hysteria2github/home-bg.png" alt="" class="img-fluid">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- end section -->
    <!-- start features -->
    <section class="section " id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#getters__2" rel="nofollow">getters 配置项</a></li> <li><a href="#mapStatemapGetters_46" rel="nofollow">mapState、mapGetters</a></li> <li><a href="#mapActionsmapMutations_124" rel="nofollow">mapActions、mapMutations</a></li> <li><a href="#_174" rel="nofollow">多组件共享数据</a></li> </ul> </div> <p> 没有看过上一篇的同学可以查看：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/u010356768/article/details/124136398"  rel="nofollow">Vue Vuex学习(搭建vuex环境、vuex求和案例)</a></p> </h1> <p><strong>index.js</strong> 中增加 getters 配置项</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>Count.vue</strong> 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/4903191c1d43bf651694443206693635.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /><strong>总结</strong><br /> 1.概念：当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工<br /> 2.在<code>store.js</code>中追加<code>getters</code> 配置</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>3.组件中读取数据：<code>$store.getters.bigSum</code></p> </h1> <p>首先引入问题。我们在 index.js 中增加学校和学科字段</p> <pre><code class="prism language-js"><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//当前和</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">"三里屯小学"</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">"Vue"</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre> <p>Count.vue 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{$store.state.sum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{$store.state.school}}学习{<!-- -->{$store.state.subject}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></code></pre> <p>查看下当前效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/a8e3e5441375a2dbc196a9ff914dec94.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 我们发现每次取值时都是<code>store.state.xxx</code>或者<code>$store.getters.xxx</code>，太长了，有的同学想到了写计算属性来简化</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>  computed:{     he(){       return this.$store.state.sum     },     xuexiao(){       return this.$store.state.school     },     xueke(){       return this.$store.state.subject     }   }</code></pre> <p>当然可以使用要学习的这个<code>mapState</code></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span> 	computed:{     	//借助mapstate生成计算属性，从state中读取数据（对象写法）     	...mapState({he:"sum",xuexiao:"school",xueke:"subject"})     	//或者     	//借助mapstate生成计算属性，从state中读取数据（数组写法）    		...mapState(['sum','school',"subject"])   	},</code></pre> <p>其中…这里是 ES6 的语法，举个例子</p> <pre><code class="prism language-js"><span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">...</span>obj1<span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">}</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/7bb05e93e5adf2c42ccda763b7632a09.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 所以<code>...mapState({he:"sum",xuexiao:"school",xueke:"subject"})</code>就相当于我们在 computed 中增加了开始写的那一堆方法</p> <p>同样 mapGetters</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{ bigSum }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>  computed: {    ......     //...mapGetters({bigSum:'bigSum'})     ...mapGetters(['bigSum'])   },</code></pre> </h1> <p>mapMutations 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>decrement(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  	methods: {     /*increment() {       this.$store.commit("JIA", this.n);     },     decrement() {       this.$store.commit("JIAN", this.n);     },*/     ...mapMutations({"increment":"JIA","decrement":"JIAN"}),    ......   }</code></pre> <p>mapMutations 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIA(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIAN(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  	//借助 mapMutations 生成对用的方法，方法中会调用 commit去联系mutations(数组写法)     ...mapMutations(["JIA","JIAN"]),</code></pre> <p>数组的这种写法意思是生成方法名为 JIA，commit 的方法名也为 JIA 才能这样写，所以调用时，我们方法名要写 JIA，同样的也要把参数传进去<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/c9b1790a7b9c8d7d9c1ef414c2152e24.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> mapAtions 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>      methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(对象写法) 	...mapActions({incrementOdd:"jiaOdd",incrementWait:"jiaWait"}) }</code></pre> <p>mapAtions 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>     methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(数组写法)     ...mapActions(["jiaOdd","jiaWait"])     }</code></pre> </h1> <p>现在再写一个 Person 组件，展示人员信息。要完成 Person 组件展示刚才 Count 组件中的 sum 值。而 Count 组件展示人员信息</p> <p>我们首先完成 Person 组件的人员展示和添加。首先在 index.js 中的 state 中存入<code>personList</code> 做为要展示的人员数据。然后在 Person.vue 中使用<code>v-for</code> 循环出人员数据</p> <p>然后实现添加人员方法。正常应该在 index.js 中的 actions 写方法，然后 commit 给 mutations，但是因为逻辑比较简单，所以我们直接在 mutations 中写一个添加人员的方法<code>ADD_PERSON</code>，然后在 Person.vue 中使用<code>this.$store.commit</code>提交添加的人员数据即可。先看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/422ece0b29d05848f0f3b01c6a754932.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> <p>完整代码如下(仅展示改动的代码)：</p> <p><strong>index.js</strong></p> <pre><code class="prism language-js"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//准备mutations；用于操作数据（state）</span><span class="token keyword">const</span> mutations<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token constant">ADD_PERSON</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mutations中的ADD_PERSON被调用了"</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>         state<span class="token punctuation">.</span>personList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//准备state；用于存储数据</span><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">personList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"001"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"张三"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"002"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"李四"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span></code></pre> <p><strong>Person.vue</strong></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>人员信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入名字<span class="token punctuation">"</span></span><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person in personList<span class="token punctuation">"</span></span><span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person.id<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{<!-- -->{person.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>nanoid<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"nanoid"</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"Person"</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> personObj<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"ADD_PERSON"</span><span class="token punctuation">,</span>personObj<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">personList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personList<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">select, button</span><span class="token punctuation">{<!-- --></span><span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre> <p>App.vue 中引入组件并使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Count</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Person</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> Count<span class="token keyword">from</span><span class="token string">"@/components/Count"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Person<span class="token keyword">from</span><span class="token string">"@/components/Person"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'App'</span><span class="token punctuation">,</span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span>Count<span class="token punctuation">,</span>Person<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre> <p>下面实现数据共享，我们让 Count 组件展示 Person 组件中总人数，Person 组件展示 Count 组件的求和数</p> <p>修改 Count 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Person组件的总人数为{<!-- -->{personList.length}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">"subject"</span><span class="token punctuation">,</span><span class="token string">"personList"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre> <p>修改 Person 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Count组件求和为{<!-- -->{sum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre> <p>查看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/f59590800569f717e090583a9d8fc0d7.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-40511.htm">宠物粮市场分析论文怎么写好（宠物粮市场开发方案）</a></p>
                                        <p>下一个：<a href="/news/article-41009.htm">宠物零食制作方法大全（宠物零食制作教程）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-34179.htm" title="pymysql 连接mysql（带参数变量）">pymysql 连接mysql（带参数变量）</a></li>
                        <li class="py-2"><a href="/news/article-28953.htm" title="私人出售狗,小土狗小笨狗（出售自家纯笨狗）">私人出售狗,小土狗小笨狗（出售自家纯笨狗）</a></li>
                        <li class="py-2"><a href="/news/article-31252.htm" title="如何在Android sqlite中删除表？">如何在Android sqlite中删除表？</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-4-node-share-links.htm" title="11月4日→20.6M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">11月4日→20.6M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-21-node-share-links.htm" title="12月21日→22.5M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">12月21日→22.5M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-11-hysteria-node-github.htm" title="1月11日→20.4M/S|2025年最新免费节点Hysteria2 Github订阅链接地址">1月11日→20.4M/S|2025年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-30-sing-hysteria-windows.htm" title="12月30日→18.7M/S|2024年最新免费节点Hysteria2 Github订阅链接地址">12月30日→18.7M/S|2024年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-42003.htm" title="仓鼠得了皮肤病会自愈吗（仓鼠得了皮肤病的症状）">仓鼠得了皮肤病会自愈吗（仓鼠得了皮肤病的症状）</a></li>
                        <li class="py-2"><a href="/news/article-22463.htm" title="宠物医院的好评怎么写 宠物医院的好评怎么写文案">宠物医院的好评怎么写 宠物医院的好评怎么写文案</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-node-share.htm" title="1月6日→18M/S|2025年最新免费节点Hysteria2 Github订阅链接地址">1月6日→18M/S|2025年最新免费节点Hysteria2 Github订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">51</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- end features -->
        <div class="bg-light">
        <div class="container">
            <div class="row justify-content-center pt-5">
                <div class="col-lg-12">
                    <div class="copy-right mb-5 text-center text-muted">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <a href="/">Hysteria2 Github免费机场节点订阅官网</a> 版权所有 Powered by WordPress
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- bootstrap -->
    <script src="/assets/website/js/frontend/hysteria2github/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/hysteria2github/swiper.min.js"></script>
    <!-- counter -->
    <script src="/assets/website/js/frontend/hysteria2github/counter.init.js"></script>
    <!-- Custom -->
    <script src="/assets/website/js/frontend/hysteria2github/app.js"></script>
    <script>
    (function() {
        // Add event listener
        document.addEventListener("mousemove", parallax);
        const elem = document.querySelector("#home-animation");
        // Magic happens here
        function parallax(e) {
            let _w = window.innerWidth / 2;
            let _h = window.innerHeight / 2;
            let _mouseX = e.clientX;
            let _mouseY = e.clientY;
            let _depth1 = `${50 - (_mouseX - _w) * 0.01}% ${50 - (_mouseY - _h) * 0.01}%`;
            let _depth2 = `${50 - (_mouseX - _w) * 0.02}% ${50 - (_mouseY - _h) * 0.02}%`;
            let _depth3 = `${50 - (_mouseX - _w) * 0.06}% ${50 - (_mouseY - _h) * 0.06}%`;
            let x = `${_depth3}, ${_depth2}, ${_depth1}`;
            elem.style.backgroundPosition = x;
        }

    })();
    </script>
    <script>
    (function() {
        // Add event listener
        document.addEventListener("mousemove", parallax);
        const elem = document.querySelector("#ani-round");
        // Magic happens here
        function parallax(e) {
            let _w = window.innerWidth / 2;
            let _h = window.innerHeight / 2;
            let _mouseX = e.clientX;
            let _mouseY = e.clientY;
            let _depth1 = `${50 - (_mouseX - _w) * 0.01}% ${50 - (_mouseY - _h) * 0.01}%`;
            let _depth2 = `${50 - (_mouseX - _w) * 0.02}% ${50 - (_mouseY - _h) * 0.02}%`;
            let _depth3 = `${50 - (_mouseX - _w) * 0.06}% ${50 - (_mouseY - _h) * 0.06}%`;
            let x = `${_depth3}, ${_depth2}, ${_depth1}`;
            elem.style.backgroundPosition = x;
        }

    })();
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>